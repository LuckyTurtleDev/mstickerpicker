<!DOCTYPE html>
{% include "head" -%}

<body>
	
	<script>
		let widgetId = null
		
		window.onmessage = event => {
	if (!window.parent || !event.data) {
		return
	}

	const request = event.data
	if (!request.requestId || !request.widgetId || !request.action || request.api !== "toWidget") {
		return
	}

	if (widgetId) {
		if (widgetId !== request.widgetId) {
			return
		}
	} else {
		widgetId = request.widgetId
	}

	let response

	if (request.action === "visibility") {
		response = {}
	} else if (request.action === "capabilities") {
		response = { capabilities: ["m.sticker"] }
	} else {
		response = { error: { message: "Action not supported" } }
	}

	window.parent.postMessage({ ...request, response }, event.origin)
}
		
		
		function mauniumSendSticker(content) {
			const data = {
				content: { ...content },
				// `name` is for Element Web (and also the spec)
				// Element Android uses content -> body as the name
				name: content.body,
			}
			// Custom field that stores the ID even for non-telegram stickers
			delete data.content.id
			// This is for Element iOS
			const widgetData = {
			...data,
			description: content.body,
			file: `${content.id}.png`,
			}
			// Element iOS explodes if there are extra fields present
			delete widgetData.content["net.maunium.telegram.sticker"]
			console.log({
				api: "fromWidget",
				action: "m.sticker",
				requestId: `sticker-${Date.now()}`,
				widgetId,
				data,
				widgetData,
			})
			window.parent.postMessage({
				api: "fromWidget",
				action: "m.sticker",
				requestId: `sticker-${Date.now()}`,
				widgetId,
				data,
				widgetData,
			}, "*")
		}
	
		function sendSticker(sticker) {
			const json = sticker.getAttribute("data-json");
			mauniumSendSticker(JSON.parse(json))	
		}
	</script>
	
	<div class="topbar">
		<div>
			{% for pack in packs -%}
			{% set index=loop.index -%}
				{% for sticker in pack.stickers -%}
					{% if loop.first -%}
						<a href="#pack{{ index  }}">
							<img src="{{ get_env(name="HOMESERVER", default="https://matrix.org/") }}/_matrix/media/r0/thumbnail/{{ sticker.url | replace(from="mxc://", to="") }}?height=128&width=128&method=scale" alt="{{ sticker.body }}">
						</a>
					{% endif -%}
				{% endfor -%}
			{% endfor -%}
		</div>
		<hr>
	</div>
	<div>
		{% for pack in packs -%}
			<div>
				<div class="pack_title">
					<a name="pack{{loop.index}}" class="anchor"></a>
					<div>{{pack.title}}</div>
				</div>
				<div>
					{% for sticker in pack.stickers -%}
						<img
							onClick="sendSticker(this)"
							data-json='{{ sticker | json_encode() | replace(from="'", to="\u0027") | safe }}'
							src="{{ get_env(name="HOMESERVER", default="https://matrix.org/") }}/_matrix/media/r0/thumbnail/{{ sticker.url | replace(from="mxc://", to="") }}?height=128&width=128&method=scale" alt="{{ sticker.body }}"
						/>
					{% endfor -%}
				</div>
			</div>
		{% endfor -%}
	</div>
</body>
</html> 
